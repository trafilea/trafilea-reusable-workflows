name: Terragrunt

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      AWS_REGION:
        required: false
        default: "us-east-1"
        type: string
      DOCKER_IMAGE_TAG:
        required: false
        type: string
      PACKAGE_VERSION:
        required: false
        type: string
      INFRA_PATH:
        required: false
        default: terraform
        type: string

    secrets:
      GH_WORKFLOW_TOKEN:
        required: true
      TE_DD_API_KEY:
        required: true
      DB_PASSWORD:
        required: false
      TE_DD_APP_KEY:
        required: false

jobs:
  check_org:
    name: Check Caller
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'trafilea' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')
  
  directories:
    needs: check_org
    name: "Directory-changes"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: filter-directories
        run: |
          output_json=$(./deploy_script.sh ${{ inputs.ENVIRONMENT }})
          echo "json_matrix=$output_json" >> "$GITHUB_OUTPUT"
          echo "$output_json"
      
    outputs:
      dirs: ${{ steps.filter-directories.outputs.json_matrix }}

  deploy:
    needs: directories
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.directories.outputs.dirs ) }}

    env:
      AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION}}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_docker_image_tag: ${{ inputs.DOCKER_IMAGE_TAG }}
      PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION }}
      ENV: ${{ inputs.ENVIRONMENT }}
      DD_API_KEY: ${{ secrets.TE_DD_API_KEY }}
      DD_APP_KEY: ${{ secrets.TE_DD_APP_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          git config --local --remove-section http."https://github.com/"
          git config --global url."https://foo:${{ secrets.GH_WORKFLOW_TOKEN }}@github.com/trafilea".insteadOf "https://github.com/trafilea"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
          aws-region: "${{ inputs.AWS_REGION }}"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: 1.2.9

      - name: Install Terragrunt
        uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: 0.36.12
      
      - name: Terragrunt Plan
        if: github.event_name == 'pull_request'
        run: terragrunt plan -lock=false --terragrunt-non-interactive --terragrunt-source-update --terragrunt-include-external-dependencies
        working-directory: ${{ github.workspace }}/${{ matrix.targets }}

      - name: Terragrunt Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terragrunt apply --terragrunt-non-interactive --terragrunt-include-external-dependencies
        working-directory: ${{ github.workspace }}/${{ matrix.targets }}
