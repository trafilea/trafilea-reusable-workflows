name: Upload Static Frontend

on:
  workflow_call:
    inputs:
      BUILDS_BUCKET:
        required: true
        type: string
      AWS_REGION:
        required: false
        default: "us-east-1"
        type: string
      BUILD_FOLDER:
        required: false
        default: dist
        type: string
      BUILD_COMMAND:
        required: true
        type: string
      INSTALL_COMMAND:
        required: true
        type: string
      PACKAGE_NAME:
        required: true
        type: string
      VERSION:
        required: true
        type: string

    secrets:
      OIDC_IAM_ROLE:
        required: true
      GH_WORKFLOW_TOKEN:
        required: true

jobs:
  check_org:
    name: Check Caller
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'trafilea' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')

  upload:
    needs: check_org
    name: Upload
    runs-on: ubuntu-latest
    
    env:
      AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          submodules: true
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}

      - name: Configure AWS Credentials - OPS
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
          aws-region: "${{ inputs.AWS_REGION }}"

      - name: Build and Zip package
        run: |
          ${{ inputs.INSTALL_COMMAND }}
          ${{ inputs.BUILD_COMMAND }}
          zip -r ${{ inputs.PACKAGE_NAME}}-${{ inputs.VERSION }}.zip ${{ inputs.BUILD_FOLDER }}
      
      - name: Upload build to Amazon S3
        env:
          PACKAGE_FILE: ${{ inputs.PACKAGE_NAME}}-${{ inputs.VERSION }}.zip
          AWS_S3_BUCKET: ${{ inputs.BUILDS_BUCKET }}
          PROJECT_NAME: ${{ inputs.PACKAGE_NAME }}
        run: |
          aws s3 cp $PACKAGE_FILE s3://$AWS_S3_BUCKET/$PROJECT_NAME/$PACKAGE_FILE
          rm -f $PACKAGE_FILE
