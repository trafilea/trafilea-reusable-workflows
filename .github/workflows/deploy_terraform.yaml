name: deploy_terraform

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      AWS_REGION:
        required: false
        default: "us-east-1"
        type: string
      PATH:
        required: true
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GH_WORKFLOW_TOKEN:
        required: true

jobs:
  check_org:
    name: Check calling organization
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'trafilea' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')


  deploy:
    needs: check_org
    name: deploy
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.OPS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.OPS_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Configure Github Credentials
        uses: philips-labs/terraform-private-modules-action@v1
        with:
          org: trafilea
          token: ${{ secrets.GH_WORKFLOW_TOKEN }} 

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 1.1.9
      
      - name: Set environment var
        run: export TF_VAR_environment=${{ inputs.ENVIRONMENT }}


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OPS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OPS_AWS_SECRET_ACCESS_KEY  }}
          aws-region: "${{ inputs.AWS_REGION }}"

      - name: Init terraform backend
        run: terraform init
        working-directory: ${{ github.workspace }}/${{inputs.PATH}}/

      - name: Terraform Plan
        run: terraform plan 
        working-directory: ${{ github.workspace }}/${{inputs.PATH}}/


      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/${{inputs.PATH}}/