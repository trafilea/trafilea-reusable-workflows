name: Upload ENV Vars to S3

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_TAG:
        required: false
        type: string
      APP_NAME:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
        default: "us-east-1"
      ENVIRONMENT_VARS_DIRECTORY:
        required: false
        type: string
        default: "configuration"
      ENV_FILE_TYPE:
        required: false
        type: string
        default: "all"
      ENV_FILE_PREFIX:
        required: false
        type: string
        default: ".env"

    secrets:
      GH_WORKFLOW_TOKEN:
        required: true
      OIDC_IAM_ROLE:
        required: true


jobs:
  check_org:
    name: Check Caller
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'trafilea' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')

  deploy:
    needs: check_org
    name: Deploy
    runs-on: ubuntu-latest

    env:
      ENV: ${{ inputs.ENVIRONMENT }}
      IMAGE_TAG: ${{ inputs.DOCKER_IMAGE_TAG }}
      APP_NAME: ${{ inputs.APP_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      
      - name: Configure AWS Credentials
        id: oidc
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
          aws-region: "${{ inputs.AWS_REGION }}"

      - name: Upload .env to S3
        env:
          project_name: ${{ inputs.APP_NAME }}
          version: ${{ inputs.DOCKER_IMAGE_TAG }}
          vars_directory: ${{ inputs.ENVIRONMENT_VARS_DIRECTORY }}
        run: |
          valid_types=("ecs" "eks" "all")
          if [[ ! "${valid_types[@]}" =~ "${{ inputs.ENV_FILE_TYPE }}" ]]; then
            echo "Invalid ENV_FILE_TYPE specified. Supported types are 'ecs', 'eks', or 'all'."
            exit 1
          fi

          if [[ "${{ inputs.ENV_FILE_TYPE }}" == "ecs" || "${{ inputs.ENV_FILE_TYPE }}" == "all" ]]; then
            echo "Uploading ECS environment files..."
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.dev && aws s3 cp $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.dev s3://trafilea-apps-config/$project_name/ecs/dev/$version.env
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.stage && aws s3 cp $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.stage s3://trafilea-apps-config/$project_name/ecs/stage/$version.env
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.prod && aws s3 cp $vars_directory/ecs/${{ inputs.ENV_FILE_PREFIX }}.prod s3://trafilea-apps-config/$project_name/ecs/prod/$version.env
          fi

          if [[ "${{ inputs.ENV_FILE_TYPE }}" == "lambda" ]]; then
            echo "Uploading Lambda environment files..."
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.dev && aws s3 cp $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.dev s3://trafilea-apps-config/$project_name/lambda/dev/$version.env
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.stage && aws s3 cp $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.stage s3://trafilea-apps-config/$project_name/lambda/stage/$version.env
            sed -i -e 's/^[[:space:]]*\([^[:space:]=]*\)[[:space:]]*=[[:space:]]*/\1=/' -e 's/"\(.*\)"[[:space:]]*$/\1/' $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.prod && aws s3 cp $vars_directory/lambda/${{ inputs.ENV_FILE_PREFIX }}.prod s3://trafilea-apps-config/$project_name/lambda/prod/$version.env
          fi

          if [[ "${{ inputs.ENV_FILE_TYPE }}" == "eks" || "${{ inputs.ENV_FILE_TYPE }}" == "all" ]]; then
            echo "Uploading EKS environment files..."
            aws s3 cp $vars_directory/eks/${{ inputs.ENV_FILE_PREFIX }}.dev s3://trafilea-apps-config/$project_name/eks/dev/$version.env
            aws s3 cp $vars_directory/eks/${{ inputs.ENV_FILE_PREFIX }}.stage s3://trafilea-apps-config/$project_name/eks/stage/$version.env
            aws s3 cp $vars_directory/eks/${{ inputs.ENV_FILE_PREFIX }}.prod s3://trafilea-apps-config/$project_name/eks/prod/$version.env
          fi
