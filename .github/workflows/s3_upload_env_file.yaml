name: Upload ENV Vars to S3

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_TAG:
        required: false
        type: string
      APP_NAME:
        required: true
        type: string
      ENV_ACCOUNT_ID:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
        default: "us-east-1"
      ENVIRONMENT_VARS_DIRECTORY:
        required: false
        type: string
        default: "configuration"
      ENVIRONMENT:
        required: true
        type: string

    secrets:
      GH_WORKFLOW_TOKEN:
        required: true
      ARGOCD_TOKEN:
        required: true
      OIDC_IAM_ROLE:
        required: true


jobs:
  check_org:
    name: Check Caller
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'trafilea' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')

  deploy:
    needs: check_org
    name: Deploy
    runs-on: ubuntu-latest

    env:
      ENV: ${{ inputs.ENVIRONMENT }}
      IMAGE_TAG: ${{ inputs.DOCKER_IMAGE_TAG }}
      APP_NAME: ${{ inputs.APP_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      
      - name: Configure AWS Credentials
        id: oidc
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
          aws-region: "${{ inputs.AWS_REGION }}"
          output-credentials: true

      - name: Assume Role in ENV Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "${{ inputs.AWS_REGION }}"
          aws-access-key-id: ${{ steps.oidc.outputs.aws-access-key-id }}
          aws-secret-access-key: ${{ steps.oidc.outputs.aws-secret-access-key }}
          aws-session-token: ${{ steps.oidc.outputs.aws-session-token }}
          role-to-assume: arn:aws:iam::${{ inputs.ENV_ACCOUNT_ID }}:role/terraform-admin-role

      - name: Upload .env to S3
        env:
          aws_account_id: ${{ inputs.ENV_ACCOUNT_ID }}
          project_name: ${{ inputs.APP_NAME }}
          version: ${{ inputs.DOCKER_IMAGE_TAG }}
          environment: ${{ inputs.ENVIRONMENT }}
          vars_directory: ${{ inputs.ENVIRONMENT_VARS_DIRECTORY }}
        run: |
          aws s3 cp $vars_directory/.env.$environment s3://trafilea-app-configs-$aws_account_id/$project_name/$project_name-$version.env