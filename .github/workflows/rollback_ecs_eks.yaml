name: Rollback ECS & EKS Service

on:
    workflow_call:
      inputs:
        ENVIRONMENT:
          required: true
          type: string
        AWS_REGION:
          required: false
          default: "us-east-1"
          type: string
        APP_NAME:
          required: true
          type: string
        CLUSTER_NAME:
          required: false
          default: "traf-engine-cluster"
          type: string
        ENV_ACCOUNT_ID:
          required: true
          type: string
        CONTAINER_TYPE:
          required: false
          type: string
          default: "all"
        APP_NAME_SHORT:
          required: false
          type: string
          default: ${{ github.event.inputs.APP_NAME }}
        
      secrets:
        GH_WORKFLOW_TOKEN:
          required: true
        ARGOCD_TOKEN:
            required: true
        OIDC_IAM_ROLE:
            required: true
        

jobs:
    check_org:
        name: Check Caller
        runs-on: ubuntu-latest

        steps:
            - name: Check the calling organization
              if: ${{ github.repository_owner != 'trafilea' }}
              uses: actions/github-script@v3
              with:
                script: |
                  core.setFailed('This reusable workflow can only be used by Trafilea.')

    rollback-ecs:
        if: ${{ inputs.CONTAINER_TYPE == 'all' || inputs.CONTAINER_TYPE == 'ecs' }}
        needs: check_org
        name: Rollback ECS
        runs-on: ubuntu-latest
        
        env:
            AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION }}
            DD_API_KEY: ${{ secrets.TE_DD_API_KEY }}
            DD_APP_KEY: ${{ secrets.TE_DD_APP_KEY }}
            APP_NAME: ${{ inputs.APP_NAME }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - run: |
                git config --local --remove-section http."https://github.com/"
                git config --global url."https://foo:${{ secrets.GH_WORKFLOW_TOKEN }}@github.com/trafilea".insteadOf "https://github.com/trafilea"
      
            - name: Configure AWS Credentials
              id: oidc
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
                aws-region: "${{ inputs.AWS_REGION }}"
                output-credentials: true

            - name: Assume Role in ENV Account
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: "${{ inputs.AWS_REGION }}"
                aws-access-key-id: ${{ steps.oidc.outputs.aws-access-key-id }}
                aws-secret-access-key: ${{ steps.oidc.outputs.aws-secret-access-key }}
                aws-session-token: ${{ steps.oidc.outputs.aws-session-token }}
                role-to-assume: arn:aws:iam::${{ inputs.ENV_ACCOUNT_ID }}:role/terraform-admin-role

            - name: Get current task definition revision
              id: get-current-task-def
              run: |
                CURRENT_TASK_DEF=$(aws ecs describe-services --cluster ${{ inputs.CLUSTER_NAME }} --services ${{ inputs.APP_NAME_SHORT }}-service --query 'services[0].taskDefinition' --output text)
                CURRENT_REVISION=$(echo $CURRENT_TASK_DEF | rev | cut -d':' -f1 | rev)
                echo "CURRENT_REVISION=$CURRENT_REVISION" >> $GITHUB_ENV
      
            - name: Calculate previous task definition
              id: get-previous-task-def
              run: |
                PREVIOUS_REVISION=$((CURRENT_REVISION - 1))
                if [ "$PREVIOUS_REVISION" -le 0 ]; then
                  echo "No previous task definition found. Aborting."
                  exit 1
                fi
                PREVIOUS_TASK_DEFINITION="${{ inputs.APP_NAME_SHORT }}-task-def:${PREVIOUS_REVISION}"
                echo "PREVIOUS_TASK_DEFINITION=$PREVIOUS_TASK_DEFINITION" >> $GITHUB_ENV
      
            - name: Update ECS service with previous task definition
              run: |
                aws ecs update-service --cluster ${{ inputs.CLUSTER_NAME }} --service ${{ inputs.APP_NAME_SHORT }}-service --task-definition ${{ env.PREVIOUS_TASK_DEFINITION }}

    rollback-eks:
        if: ${{ inputs.CONTAINER_TYPE == 'all' || inputs.CONTAINER_TYPE == 'eks' }}
        needs: check_org
        name: Rollback EKS
        runs-on: ubuntu-latest
        
        env:
            AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION }}
            DD_API_KEY: ${{ secrets.TE_DD_API_KEY }}
            DD_APP_KEY: ${{ secrets.TE_DD_APP_KEY }}
            ENV: ${{ inputs.ENVIRONMENT }}
            APP_NAME: ${{ inputs.APP_NAME }}

        steps:
            - name: Clone GitOps Repo
              uses: actions/checkout@v3
              with:
                repository: trafilea/trafilea-gitops
                ref: main
                fetch-depth: 0
                token: ${{ secrets.GH_WORKFLOW_TOKEN }}

            - name: Configure Git User creds
              run: |
                git config --global user.email "actions@github.com"
                git config --global user.name "Actions"

            - name: Revert specific file to previous commit
              run: |
                LAST_COMMIT=$(git log -n 1 --pretty=format:"%H" -- apps/overlays/$ENV/$APP_NAME/$APP_NAME.yaml)
                if [ -z "$LAST_COMMIT" ]; then
                  echo "No commit found for the file. Aborting."
                  exit 1
                fi
                git checkout $LAST_COMMIT^ -- apps/overlays/$ENV/$APP_NAME/$APP_NAME.yaml
                git add apps/overlays/$ENV/$APP_NAME/$APP_NAME.yaml
                git commit -m "Revert ${APP_NAME}.yaml to previous version"
                git push  
              
            - name: Set argocd server
              id: setdest
              run: |
                if [ ${{ inputs.ENVIRONMENT }}  == 'dev' ]; then echo "SERVER_ADDRESS=argo.development.trafilea.app" >> $GITHUB_OUTPUT; elif [ ${{ inputs.ENVIRONMENT }}  == 'stage' ]; then echo "SERVER_ADDRESS=argo.staging.trafilea.app" >> $GITHUB_OUTPUT; else echo "SERVER_ADDRESS=argo.production.trafilea.app" >> $GITHUB_OUTPUT; fi
                sleep 5

            - name: Sync ArgoCD Application
              uses: omegion/argocd-actions@v1
              with:
                address: ${{ steps.setdest.outputs.SERVER_ADDRESS }}
                token: ${{ secrets.ARGOCD_TOKEN }}
                action: sync
                appName: applications
        
            - name: Sync ArgoCD Application
              uses: omegion/argocd-actions@v1
              with:
                address: ${{ steps.setdest.outputs.SERVER_ADDRESS }}
                token: ${{ secrets.ARGOCD_TOKEN }}
                action: sync
                appName: configurations 