name: Build and push a Docker image to ECR

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
        default: "us-east-1"


    secrets:
      OPS_AWS_ACCESS_KEY_ID:
        required: true
      OPS_AWS_SECRET_ACCESS_KEY:
        required: true
      GH_WORKFLOW_TOKEN:
        required: true


jobs:
  check_org:
    name: Check Caller
    runs-on: ubuntu-latest

    steps:
      - name: Check the calling organization
        if: ${{ github.repository_owner != 'jw-tera' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('This reusable workflow can only be used by Trafilea.')


  build_n_push:
    needs: check_org
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}

      - name: Set Image tag
        id: set-image-tag
        run: |
          echo "::set-output name=image_tag::$(echo ${{ github.sha }} | cut -c1-12)"

      - name: Set LATEST tag
        id: set-latest-tag
        run: |
          if [ ${{ github.ref }}  == 'refs/heads/develop' ]; then echo "::set-output name=latest_tag::latest"; else echo "::set-output name=latest_tag::latest-staging"; fi

      - name: Configure AWS Credentials
        id: configure-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OPS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OPS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-container-registry
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Container Image
        id: build-container-image
        env:
          ECR_REGISTRY: ${{ steps.login-container-registry.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.APP_NAME }}
        run: |
          docker build . \
            --progress plain \
            --file Dockerfile \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.IMAGE_TAG }}
          docker tag \
            $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.IMAGE_TAG }} \
            $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.LATEST_TAG }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.IMAGE_TAG }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.LATEST_TAG }}
